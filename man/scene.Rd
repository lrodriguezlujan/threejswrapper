% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scene.R
\name{sceneThreeJS}
\alias{is.sceneThreeJS}
\alias{scene}
\alias{sceneThreeJS}
\alias{toJSONList.sceneThreeJS}
\title{S3 class for threeJS scene builder}
\usage{
sceneThreeJS(objects, lights = NULL, helpers = NULL, colorscale = NULL,
  objects.append = F, lights.append = F, camera.fov = NULL,
  camera.near = NULL, camera.far = NULL, camera.pos = NULL,
  camera.lookat = NULL, controls = NULL, renderer = c(NULL, "auto",
  "webgl", "canvas"), bgColor = NULL, animateFun = NULL)

is.sceneThreeJS(obj)

\method{toJSONList}{sceneThreeJS}(obj)

scene(..., width = NULL, height = NULL)
}
\arguments{
\item{objects}{3D Objects to include in the scene \link{object}}

\item{lights}{List of \code{lightThreeJS} in the scene. See \link{light}}

\item{helpers}{List of \code{helperThreeJS} to be added to the scene. See \link{helper}}

\item{colorscale}{An \code{colorscaleThreeJS} object. See \link{colorscale}}

\item{objects.append}{If \code{FALSE} any object in a previous renderization is removed}

\item{lights.append}{If \code{FALSE} any light in a previous renderization is removed}

\item{camera.fov}{Camera field of view in degrees}

\item{camera.near}{Camera near plane distance}

\item{camera.far}{Camera far plane distance}

\item{camera.pos}{Camera position in cartesian coordinates}

\item{camera.lookat}{Initial target point of the camera in cartesian coordinates}

\item{controls}{Control names (TBD - Experimental)}

\item{renderer}{\code{auto} for automatic selection, \code{webgl} or \code{canvas}}

\item{bgColor}{Scene background color}

\item{animateFun}{JavaScript function \code{f(delta, composition)} to be called in each animation frame (EXPERIMENTAL)}

\item{obj}{A scene object}

\item{\dots}{(scene) Parameters for \code{sceneThreeJS}}
}
\description{
A threeJS scene definition. Includes different objects and lights

\code{scene} creates an HTML widgets that represents a \code{sceneThreeJS} object
}
\examples{
\dontrun{
 scene( list(objThreeJS( sphereGeometry(1), lambertMaterial(color = "red"), helpers = boundingBox() )),
        lights = list(
 directionalLight(
   "#FFFFFF",intensity = 0.5,from = c(1,1,0)
 ),
 directionalLight(
   "#FFFFFF",intensity = 0.5,from = c(0,0,1)
 ),
 ambientLight("#333333")
 ),
 helpers = list(gridHelper(),axisHelper(size = 10))
 )

}
}

